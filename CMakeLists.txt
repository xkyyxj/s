cmake_minimum_required(VERSION 3.12)
project(123)

ADD_DEFINITIONS(-DBoost_LIB_DIAGNOSTIC_DEFINITIONS)
add_compile_definitions(EXECUTION)
#ADD_DEFINITIONS(-DWINDOWS_PLATFORM)
set(CMAKE_CXX_STANDARD 14)

find_package(Boost 1.66.0 COMPONENTS system context thread REQUIRED)

include_directories(${Boost_INCLUDE_DIRS})
#windows平台链接库的时候，boost代码当中会有相关判定，所以直接link_directories，避免相关问题
if(WIN32 AND Boost_FOUND)
    add_compile_definitions(WINDOWS_PLATFORM)
    link_directories(${Boost_LIBRARY_DIRS})
endif()
aux_source_directory(. DIR_SRCS)
add_subdirectory(algorithm)
add_subdirectory(data_fetch)
add_subdirectory(stock_base_info)
#add_executable(123 main.cpp data_fetch/DataFetc h.cpp data_fetch/DataFetch.h algorithm/Calculaotr.cpp algorithm/Calculaotr.h stock_base_info/stock_info.cpp stock_base_info/stock_info.h data_fetch/HttpHeader.cpp data_fetch/HttpHeader.h)
#add_executable(123 ${DIR_SRCS} output/FileResultOutput.cpp output/FileResultOutput.h)
if(NOT EXECUTION)
	add_library(123 SHARED ${DIR_SRCS})
else()
	add_executable(123 ${DIR_SRCS})
endif()

TARGET_LINK_LIBRARIES(123 data_fetch)
TARGET_LINK_LIBRARIES(123 algorithm)
if(NOT WIN32)
    TARGET_LINK_LIBRARIES(123 ${Boost_LIBRARIES})
endif()